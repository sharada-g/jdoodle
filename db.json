{
  "steps": [
    {
      "id": 0,
      "title": "Choose a Challenge",
      "subtitle": "Pick a challenge from our library of 10+ programming questions.",
      "subSteps": [
        {
          "id": 1,
          "description": "Choose from 10+ programming questions."
        },
        {
          "id": 2,
          "description": "5 test cases to validate your answers."
        },
        {
          "id": 3,
          "description": "Randomly selected 5 programming problems."
        }
      ],
      "image": {
        "src": "https://www.hackerrank.com/wp-content/uploads/2022/11/binarytree-1.png",
        "alt": "Choose a Challenge"
      }
    },
    {
      "id": 1,
      "title": "Write and Test Your Code",
      "subtitle": "Write your code in the browser and test it using JDoodle Websocket APIs.",
      "subSteps": [
        {
          "id": 1,
          "description": "Write your code in the browser."
        },
        {
          "id": 2,
          "description": "Test your code using JDoodle Websocket APIs."
        },
        {
          "id": 3,
          "description": "Submit your answers to all problems."
        }
      ],
      "image": {
        "src": "https://www.hackerrank.com/wp-content/uploads/2022/11/code-1.png",
        "alt": "Write Your Code"
      }
    },
    {
      "id": 2,
      "title": "Get Feedback",
      "subtitle": "Get detailed feedback on your code and improve your skills.",
      "subSteps": [
        {
          "id": 1,
          "description": "Validate your answers using JDoodle REST API."
        },
        {
          "id": 2,
          "description": "Review test case results and learn from them."
        },
        {
          "id": 3,
          "description": "Improve your programming skills and knowledge."
        }
      ],
      "image": {
        "src": "https://www.hackerrank.com/wp-content/uploads/2022/09/contenders.png",
        "alt": "Get Feedback"
      }
    }
  ],
  "testimonials": [
    {
      "id": 0,
      "name": "John Doe",
      "position": "Software Developer",
      "image": "https://picsum.photos/200",
      "testimonial": "This app has helped me sharpen my coding skills and prepare for technical interviews. The gamified experience makes it fun and engaging."
    },
    {
      "id": 1,
      "name": "Jane Smith",
      "position": "Frontend Developer",
      "image": "https://picsum.photos/201",
      "testimonial": "I was able to significantly improve my coding abilities using this app. The problem bank has a great variety of challenges to choose from."
    },
    {
      "id": 2,
      "name": "Bob Johnson",
      "position": "Fullstack Developer",
      "image": "https://picsum.photos/202",
      "testimonial": "The real-time code editor and built-in testing capabilities make solving problems a breeze. Highly recommend this app!"
    },
    {
      "id": 3,
      "name": "Emily Chen",
      "position": "Software Engineer",
      "image": "https://picsum.photos/203",
      "testimonial": "The detailed feedback provided after submitting addTwoNumberss is extremely helpful in identifying areas for improvement. Love this app!"
    },
    {
      "id": 4,
      "name": "Michael Lee",
      "position": "Backend Developer",
      "image": "https://picsum.photos/204",
      "testimonial": "I was able to learn new programming concepts and improve my problem-solving skills using this app. The gamification features make it really fun!"
    }
  ],
  "leaderboard": [
    {
      "id": 1,
      "first_name": "Alice",
      "last_name": "Smith",
      "image": {
        "src": "https://picsum.photos/201",
        "alt": "Alice Smith's profile picture"
      },
      "points": 100,
      "attempts": 8,
      "completed": 6
    },
    {
      "id": 2,
      "first_name": "Bob",
      "last_name": "Johnson",
      "image": {
        "src": "https://picsum.photos/202",
        "alt": "Bob Johnson's profile picture"
      },
      "points": 85,
      "attempts": 3,
      "completed": 1
    },
    {
      "id": 3,
      "first_name": "Charlie",
      "last_name": "Brown",
      "image": {
        "src": "https://picsum.photos/203",
        "alt": "Charlie Brown's profile picture"
      },
      "points": 75,
      "attempts": 9,
      "completed": 4
    },
    {
      "id": 4,
      "first_name": "David",
      "last_name": "Davis",
      "image": {
        "src": "https://picsum.photos/204",
        "alt": "David Davis's profile picture"
      },
      "points": 120,
      "attempts": 10,
      "completed": 7
    },
    {
      "id": 5,
      "first_name": "Eve",
      "last_name": "Lee",
      "image": {
        "src": "https://picsum.photos/205",
        "alt": "Eve Lee's profile picture"
      },
      "points": 105,
      "attempts": 7,
      "completed": 3
    },
    {
      "id": 6,
      "first_name": "Frank",
      "last_name": "Garcia",
      "image": {
        "src": "https://picsum.photos/206",
        "alt": "Frank Garcia's profile picture"
      },
      "points": 45,
      "attempts": 5,
      "completed": 2
    },
    {
      "id": 7,
      "first_name": "Grace",
      "last_name": "Harris",
      "image": {
        "src": "https://picsum.photos/207",
        "alt": "Grace Harris's profile picture"
      },
      "points": 80,
      "attempts": 10,
      "completed": 5
    },
    {
      "id": 8,
      "first_name": "Harry",
      "last_name": "Taylor",
      "image": {
        "src": "https://picsum.photos/208",
        "alt": "Harry Taylor's profile picture"
      },
      "points": 55,
      "attempts": 6,
      "completed": 2
    },
    {
      "id": 9,
      "first_name": "Isabella",
      "last_name": "Brown",
      "image": {
        "src": "https://picsum.photos/209",
        "alt": "Isabella Brown's profile picture"
      },
      "points": 90,
      "attempts": 8,
      "completed": 4
    }
  ],
  "challenges": [
    {
      "id": 0,
      "title": "Add two numbers",
      "description": [
        "You are given two integer numbers, a and b",
        "You need to add them and return the sum."
      ],
      "notes": [
        "Follow-up: Can you come up with an algorithm that is less than O(n2) time complexity?"
      ],
      "examples": [
        {
          "id": 0,
          "input": "a=1 b=2",
          "output": "3"
        },
        {
          "id": 1,
          "input": "a=5 b=5",
          "output": "10"
        },
        {
          "id": 2,
          "input": "a=10 b=20",
          "output": "30"
        }
      ],
      "codeStart": ["function addTwoNumbers(a, b) {", "let result = 0;"],
      "codeEnd": ["return result", "}"],
      "testFunction": ["function test(result, expected) {", "return result === expected;", "}"],
      "testcase": [
        {
          "id": 0,
          "input": "const result = addTwoNumbers(1, 2);",
          "output": "console.log(test(result, 3));"
        },
        {
          "id": 1,
          "input": "const result = addTwoNumbers(5, 5);",
          "output": "console.log(test(result, 10));"
        },
        {
          "id": 2,
          "input": "const result = addTwoNumbers(10, 20);",
          "output": "console.log(test(result, 30));"
        },
        {
          "id": 3,
          "input": "const result = addTwoNumbers(100, 200);",
          "output": "console.log(test(result, 300));"
        },
        {
          "id": 4,
          "input": "const result = addTwoNumbers(1000, 2000);",
          "output": "console.log(test(result, 3000));"
        }
      ],
      "answer": "",
      "tested": false
    },
    {
      "id": 1,
      "title": "Find the largest number",
      "description": [
        "You are given an array of integers.",
        "You need to find the largest number in the array and return it."
      ],
      "notes": [
        "Follow-up: Can you come up with an algorithm that is less than O(n) time complexity?"
      ],
      "examples": [
        {
          "id": 0,
          "input": "[1, 2, 3, 4, 5]",
          "output": "5"
        },
        {
          "id": 1,
          "input": "[-1, -2, -3, -4, -5]",
          "output": "-1"
        },
        {
          "id": 2,
          "input": "[10, 20, 30, 40, 50]",
          "output": "50"
        }
      ],
      "codeStart": ["function findLargestNumber(arr) {", "let largest = arr[0];"],
      "codeEnd": ["return largest;", "}"],
      "testFunction": ["function test(result, expected) {", "return result === expected;", "}"],
      "testcase": [
        {
          "id": 0,
          "input": "const result = findLargestNumber([1, 2, 3, 4, 5]);",
          "output": "console.log(test(result, 5));"
        },
        {
          "id": 1,
          "input": "const result = findLargestNumber([-1, -2, -3, -4, -5]);",
          "output": "console.log(test(result, -1));"
        },
        {
          "id": 2,
          "input": "const result = findLargestNumber([10, 20, 30, 40, 50]);",
          "output": "console.log(test(result, 50));"
        },
        {
          "id": 3,
          "input": "const result = findLargestNumber([0, 0, 0, 0, 0]);",
          "output": "console.log(test(result, 0));"
        },
        {
          "id": 4,
          "input": "const result = findLargestNumber([-100, 0, 100]);",
          "output": "console.log(test(result, 100));"
        }
      ],
      "answer": "",
      "tested": false
    },
    {
      "id": 2,
      "title": "Reverse a String",
      "description": [
        "You are given a string s.",
        "You need to reverse the string and return the reversed string."
      ],
      "notes": [],
      "examples": [
        {
          "id": 0,
          "input": "s='hello'",
          "output": "'olleh'"
        },
        {
          "id": 1,
          "input": "s='world'",
          "output": "'dlrow'"
        },
        {
          "id": 2,
          "input": "s='abcd'",
          "output": "'dcba'"
        }
      ],
      "codeStart": ["function reverseString(s) {", "let reversed = '';"],
      "codeEnd": ["return reversed;", "}"],
      "testFunction": ["function test(result, expected) {", "return result === expected;", "}"],
      "testcase": [
        {
          "id": 0,
          "input": "const result = reverseString('hello');",
          "output": "console.log(test(result, 'olleh'));"
        },
        {
          "id": 1,
          "input": "const result = reverseString('world');",
          "output": "console.log(test(result, 'dlrow'));"
        },
        {
          "id": 2,
          "input": "const result = reverseString('abcd');",
          "output": "console.log(test(result, 'dcba'));"
        },
        {
          "id": 3,
          "input": "const result = reverseString('12345');",
          "output": "console.log(test(result, '54321'));"
        },
        {
          "id": 4,
          "input": "const result = reverseString('!@#$%');",
          "output": "console.log(test(result, '%$#@!'));"
        }
      ],
      "answer": "",
      "tested": false
    },
    {
      "id": 3,
      "title": "Calculate Factorial",
      "description": [
        "You are given a non-negative integer n.",
        "You need to calculate the factorial of n and return the result."
      ],
      "notes": [],
      "examples": [
        {
          "id": 0,
          "input": "n=5",
          "output": "120"
        },
        {
          "id": 1,
          "input": "n=3",
          "output": "6"
        },
        {
          "id": 2,
          "input": "n=0",
          "output": "1"
        }
      ],
      "codeStart": ["function factorial(n) {", "let result = 1;"],
      "codeEnd": ["return result;", "}"],
      "testFunction": ["function test(result, expected) {", "return result === expected;", "}"],
      "testcase": [
        {
          "id": 0,
          "input": "const result = factorial(5);",
          "output": "console.log(test(result, 120));"
        },
        {
          "id": 1,
          "input": "const result = factorial(3);",
          "output": "console.log(test(result, 6));"
        },
        {
          "id": 2,
          "input": "const result = factorial(0);",
          "output": "console.log(test(result, 1));"
        },
        {
          "id": 3,
          "input": "const result = factorial(1);",
          "output": "console.log(test(result, 1));"
        },
        {
          "id": 4,
          "input": "const result = factorial(10);",
          "output": "console.log(test(result, 3628800));"
        }
      ],
      "answer": "",
      "tested": false
    },
    {
      "id": 4,
      "title": "Count Vowels",
      "description": [
        "You are given a string s.",
        "You need to count the number of vowels (a, e, i, o, u) in the string and return the count."
      ],
      "notes": [],
      "examples": [
        {
          "id": 0,
          "input": "s='hello'",
          "output": "2"
        },
        {
          "id": 1,
          "input": "s='world'",
          "output": "1"
        },
        {
          "id": 2,
          "input": "s='aeiou'",
          "output": "5"
        }
      ],
      "codeStart": ["function countVowels(s) {", "let count = 0;"],
      "codeEnd": ["return count;", "}"],
      "testFunction": ["function test(result, expected) {", "return result === expected;", "}"],
      "testcase": [
        {
          "id": 0,
          "input": "const result = countVowels('hello');",
          "output": "console.log(test(result, 2));"
        },
        {
          "id": 1,
          "input": "const result = countVowels('world');",
          "output": "console.log(test(result, 1));"
        },
        {
          "id": 2,
          "input": "const result = countVowels('aeiou');",
          "output": "console.log(test(result, 5));"
        },
        {
          "id": 3,
          "input": "const result = countVowels('abcdefghijklmnopqrstuvwxyz');",
          "output": "console.log(test(result, 5));"
        },
        {
          "id": 4,
          "input": "const result = countVowels('This is a test');",
          "output": "console.log(test(result, 4));"
        }
      ],
      "answer": "",
      "tested": false
    },
    {
      "id": 5,
      "title": "Check Palindrome",
      "description": [
        "You are given a string s.",
        "You need to determine if the string is a palindrome (reads the same forwards and backwards) and return true if it is, otherwise return false."
      ],
      "notes": [],
      "examples": [
        {
          "id": 0,
          "input": "s='racecar'",
          "output": "true"
        },
        {
          "id": 1,
          "input": "s='hello'",
          "output": "false"
        },
        {
          "id": 2,
          "input": "s='madam'",
          "output": "true"
        }
      ],
      "codeStart": ["function isPalindrome(s) {", "let reversed = '';"],
      "codeEnd": ["return s === reversed;", "}"],
      "testFunction": [
        "function test(result, expected) {",
        "return result ===         expected;",
        "}"
      ],
      "testcase": [
        {
          "id": 0,
          "input": "const result = isPalindrome('racecar');",
          "output": "console.log(test(result, true));"
        },
        {
          "id": 1,
          "input": "const result = isPalindrome('hello');",
          "output": "console.log(test(result, false));"
        },
        {
          "id": 2,
          "input": "const result = isPalindrome('madam');",
          "output": "console.log(test(result, true));"
        },
        {
          "id": 3,
          "input": "const result = isPalindrome('abcdcba');",
          "output": "console.log(test(result, true));"
        },
        {
          "id": 4,
          "input": "const result = isPalindrome('abcde');",
          "output": "console.log(test(result, false));"
        }
      ],
      "answer": "",
      "tested": false
    },
    {
      "id": 7,
      "title": "FizzBuzz",
      "description": [
        "You are given an integer n.",
        "Write a function that prints the numbers from 1 to n. But for multiples of 3, print 'Fizz' instead of the number, and for the multiples of 5, print 'Buzz'. For numbers which are multiples of both 3 and 5, print 'FizzBuzz'."
      ],
      "notes": [],
      "examples": [
        {
          "id": 0,
          "input": "n=5",
          "output": "1, 2, Fizz, 4, Buzz"
        },
        {
          "id": 1,
          "input": "n=15",
          "output": "1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, FizzBuzz"
        },
        {
          "id": 2,
          "input": "n=10",
          "output": "1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz"
        }
      ],
      "codeStart": ["function fizzBuzz(n) {", "let output = '';"],
      "codeEnd": ["return output;", "}"],
      "testFunction": ["function test(result, expected) {", "return result === expected;", "}"],
      "testcase": [
        {
          "id": 0,
          "input": "const result = fizzBuzz(5);",
          "output": "console.log(test(result, '1, 2, Fizz, 4, Buzz'));"
        },
        {
          "id": 1,
          "input": "const result = fizzBuzz(15);",
          "output": "console.log(test(result, '1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, FizzBuzz'));"
        },
        {
          "id": 2,
          "input": "const result = fizzBuzz(10);",
          "output": "console.log(test(result, '1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz'));"
        },
        {
          "id": 3,
          "input": "const result = fizzBuzz(1);",
          "output": "console.log(test(result, '1'));"
        },
        {
          "id": 4,
          "input": "const result = fizzBuzz(3);",
          "output": "console.log(test(result, '1, 2, Fizz'));"
        }
      ],
      "answer": "",
      "tested": false
    }
  ]
}
